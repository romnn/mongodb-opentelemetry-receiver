[package]
name = "otel-collector"
publish = true
authors = ["romnn <contact@romnn.com>"]
description = "Opentelemetry (OTEL) collector"
readme = "./README.md"
categories = [
	"api-bindings",
	"asynchronous",
	"development-tools::profiling",
	"development-tools::debugging",
]
keywords = [
	"otel-collector",
	"opentelemetry",
	"telemetry",
]
exclude = []

version.workspace = true
edition.workspace = true
license-file.workspace = true
documentation.workspace = true
homepage.workspace = true
repository.workspace = true

[package.metadata.cargo-feature-combinations]
denylist = ["default", "full"]

[features]
default = ["full"]
full = ["mongodb", "batch", "otlp-exporter"]

mongodb = ["otel-mongodb-receiver"]
batch = ["otel-batch-processor"]
otlp-exporter = ["otel-otlp-exporter"]

[dependencies]
atty = "0"
clap = { version = "4", features = ["derive", "env"] }

# utils
color-eyre.workspace = true
tokio.workspace = true
tokio-stream.workspace = true

# tracing
tracing.workspace = true
tracing-opentelemetry = "0"
tracing-subscriber = { version = "0", features = ["json", "env-filter"] }

opentelemetry.workspace = true
opentelemetry_sdk.workspace = true

otel-collector-component.workspace = true

# optional
otel-mongodb-receiver = { path = "../../crates/receivers/mongodb", optional = true }
otel-batch-processor = { path = "../../crates/processors/batch", optional = true }
otel-otlp-exporter = { path = "../../crates/exporters/otlp", optional = true }
